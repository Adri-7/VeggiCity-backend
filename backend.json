[
    {
        "id": "cf757416.97ca88",
        "type": "tab",
        "label": "VeggiCity API"
    },
    {
        "id": "c0c690e.17165f",
        "type": "subflow",
        "name": "getJardin",
        "info": "",
        "in": [
            {
                "x": 157.7777862548828,
                "y": 157.77780151367188,
                "wires": [
                    {
                        "id": "9cdff1d.e79931"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1342.7777099609375,
                "y": 159.77781677246094,
                "wires": [
                    {
                        "id": "faa9fba7.275148",
                        "port": 0
                    }
                ]
            },
            {
                "x": 889,
                "y": 224,
                "wires": [
                    {
                        "id": "9f1a99bf.777d5",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "60ebfa82.7e48a4",
        "type": "subflow",
        "name": "getJardins",
        "info": "",
        "in": [
            {
                "x": 394,
                "y": 90,
                "wires": [
                    {
                        "id": "9196efb8.384d18"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1015,
                "y": 85,
                "wires": [
                    {
                        "id": "6b9112f0.82fa84",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "f5cdc70a.d1345",
        "type": "subflow",
        "name": "Post sensor data",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 105,
                "wires": [
                    {
                        "id": "c8e006ee.497f98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1230,
                "y": 107.75001525878906,
                "wires": [
                    {
                        "id": "e06ed683.3682f8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1309,
                "y": 374,
                "wires": [
                    {
                        "id": "a461fffa.f50ae8",
                        "port": 0
                    },
                    {
                        "id": "838380de.374e6",
                        "port": 0
                    },
                    {
                        "id": "1aabe407.0ce9ac",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "c0e93a6b.6b218",
        "type": "MySQLdatabase",
        "z": "",
        "host": "5.51.180.42",
        "port": "3306",
        "db": "veggicity",
        "tz": ""
    },
    {
        "id": "17557121.6b5617",
        "type": "http in",
        "z": "cf757416.97ca88",
        "name": "App API Server",
        "url": "/api/app",
        "method": "get",
        "swaggerDoc": "",
        "x": 195.5,
        "y": 325,
        "wires": [
            [
                "a7695812.f1ac8"
            ]
        ]
    },
    {
        "id": "b1ae170e.beb5e",
        "type": "http in",
        "z": "cf757416.97ca88",
        "name": "Sensors API Server",
        "url": "/api/sensor",
        "method": "post",
        "swaggerDoc": "",
        "x": 182.5,
        "y": 89,
        "wires": [
            [
                "caa219fc.8a0be"
            ]
        ]
    },
    {
        "id": "c18675e1.151718",
        "type": "http response",
        "z": "cf757416.97ca88",
        "name": "Server response",
        "x": 1494.27783203125,
        "y": 333.666748046875,
        "wires": []
    },
    {
        "id": "284a0285.11f016",
        "type": "template",
        "z": "cf757416.97ca88",
        "name": "Unkown method",
        "field": "error.message",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Unknown method.",
        "x": 780.8333740234375,
        "y": 449.6666259765625,
        "wires": [
            [
                "568149d7.fddb88"
            ]
        ]
    },
    {
        "id": "a7695812.f1ac8",
        "type": "switch",
        "z": "cf757416.97ca88",
        "name": "Dispatch API method",
        "property": "payload.method",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getJardins",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJardin",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 3,
        "x": 493.5,
        "y": 330,
        "wires": [
            [
                "594cde33.5b3f78"
            ],
            [
                "d9ceda21.6b7e68"
            ],
            [
                "284a0285.11f016"
            ]
        ]
    },
    {
        "id": "568149d7.fddb88",
        "type": "template",
        "z": "cf757416.97ca88",
        "name": "Build error message",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"status\": \"error\",\n    \"message\": \"{{error.message}}\"\n}",
        "x": 1090.1666870117188,
        "y": 555,
        "wires": [
            [
                "f6aabc36.9a9aa"
            ]
        ]
    },
    {
        "id": "44d1a26b.89eb44",
        "type": "template",
        "z": "c0c690e.17165f",
        "name": "Build getJardin request",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT *\nFROM Jardin\nWHERE IdJardin = '{{{payload.id}}}';",
        "x": 976.2220458984375,
        "y": 157.6666259765625,
        "wires": [
            [
                "faa9fba7.275148"
            ]
        ]
    },
    {
        "id": "faa9fba7.275148",
        "type": "mysql",
        "z": "c0c690e.17165f",
        "mydb": "c0e93a6b.6b218",
        "name": "",
        "x": 1179.3333740234375,
        "y": 156.77780151367188,
        "wires": [
            []
        ]
    },
    {
        "id": "9cdff1d.e79931",
        "type": "switch",
        "z": "c0c690e.17165f",
        "name": "Jardin ID",
        "property": "payload.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 470.6851501464844,
        "y": 162.11106872558594,
        "wires": [
            [
                "f4e04fe9.a5d898"
            ],
            [
                "9f1a99bf.777d5"
            ]
        ]
    },
    {
        "id": "9f1a99bf.777d5",
        "type": "template",
        "z": "c0c690e.17165f",
        "name": "getJardin",
        "field": "error.message",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "ID parameter is missing.",
        "x": 759.148193359375,
        "y": 223.81488037109375,
        "wires": [
            []
        ]
    },
    {
        "id": "d9ceda21.6b7e68",
        "type": "subflow:c0c690e.17165f",
        "z": "cf757416.97ca88",
        "x": 773.8888888888889,
        "y": 326.6666666666667,
        "wires": [
            [
                "a6cb2200.99618"
            ],
            [
                "568149d7.fddb88"
            ]
        ]
    },
    {
        "id": "f4e04fe9.a5d898",
        "type": "assert",
        "z": "c0c690e.17165f",
        "name": "Check parameters",
        "rules": [
            {
                "property": "payload.id",
                "propertyType": "msg",
                "type": "regex",
                "value": "\\d+",
                "valueType": "str",
                "case": false
            }
        ],
        "x": 745.8889312744141,
        "y": 156.11111450195312,
        "wires": [
            [
                "44d1a26b.89eb44"
            ]
        ]
    },
    {
        "id": "a6cb2200.99618",
        "type": "function",
        "z": "cf757416.97ca88",
        "name": "Set JSON response doctype",
        "func": "if (msg.headers == null) {\n    msg.headers = [];\n}\nmsg.headers['Content-Type'] = 'application/json';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1253.5,
        "y": 333,
        "wires": [
            [
                "c18675e1.151718"
            ]
        ]
    },
    {
        "id": "9196efb8.384d18",
        "type": "template",
        "z": "60ebfa82.7e48a4",
        "name": "Build getJardin request",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT *\nFROM Jardin;",
        "x": 639.5368957519531,
        "y": 87,
        "wires": [
            [
                "6b9112f0.82fa84"
            ]
        ]
    },
    {
        "id": "6b9112f0.82fa84",
        "type": "mysql",
        "z": "60ebfa82.7e48a4",
        "mydb": "c0e93a6b.6b218",
        "name": "",
        "x": 842.6482238769531,
        "y": 86.11117553710938,
        "wires": [
            []
        ]
    },
    {
        "id": "594cde33.5b3f78",
        "type": "subflow:60ebfa82.7e48a4",
        "z": "cf757416.97ca88",
        "x": 769.5,
        "y": 221,
        "wires": [
            [
                "a6cb2200.99618"
            ]
        ]
    },
    {
        "id": "f6aabc36.9a9aa",
        "type": "function",
        "z": "cf757416.97ca88",
        "name": "Set status code to error",
        "func": "msg.statusCode = 400;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1341,
        "y": 555,
        "wires": [
            [
                "a6cb2200.99618"
            ]
        ]
    },
    {
        "id": "e754f0a9.086d2",
        "type": "catch",
        "z": "cf757416.97ca88",
        "name": "Catch generic errors",
        "scope": null,
        "x": 520.5,
        "y": 614,
        "wires": [
            [
                "5010ba9e.8d5ac4"
            ]
        ]
    },
    {
        "id": "5010ba9e.8d5ac4",
        "type": "template",
        "z": "cf757416.97ca88",
        "name": "Generic error message",
        "field": "error.message",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Internal server error.",
        "x": 830,
        "y": 611,
        "wires": [
            [
                "568149d7.fddb88"
            ]
        ]
    },
    {
        "id": "caa219fc.8a0be",
        "type": "subflow:f5cdc70a.d1345",
        "z": "cf757416.97ca88",
        "name": "",
        "x": 654,
        "y": 89,
        "wires": [
            [
                "a6cb2200.99618"
            ],
            [
                "617e96cc.a19c5"
            ]
        ]
    },
    {
        "id": "dc679df4.785a9",
        "type": "assert",
        "z": "f5cdc70a.d1345",
        "name": "Check measurement validity",
        "rules": [
            {
                "property": "payload.data",
                "propertyType": "msg",
                "type": "type",
                "value": "array"
            },
            {
                "property": "payload.plantation",
                "propertyType": "msg",
                "type": "nnull"
            }
        ],
        "x": 243,
        "y": 154,
        "wires": [
            [
                "b200420d.453858"
            ]
        ]
    },
    {
        "id": "891c8560.55d1",
        "type": "split",
        "z": "f5cdc70a.d1345",
        "name": "Register each measure",
        "splt": "\\n",
        "x": 813,
        "y": 107,
        "wires": [
            [
                "dde679be.bf36d"
            ]
        ]
    },
    {
        "id": "4b7f1965.9d2f48",
        "type": "change",
        "z": "f5cdc70a.d1345",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "body",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 552,
        "y": 108,
        "wires": [
            [
                "891c8560.55d1"
            ]
        ]
    },
    {
        "id": "e06ed683.3682f8",
        "type": "join",
        "z": "f5cdc70a.d1345",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "timeout": "",
        "count": "",
        "x": 1080,
        "y": 107.5,
        "wires": [
            []
        ]
    },
    {
        "id": "f128c48c.176f9",
        "type": "comment",
        "z": "f5cdc70a.d1345",
        "name": "Iterate over each measure given",
        "info": "",
        "x": 832.5,
        "y": 31.25,
        "wires": []
    },
    {
        "id": "219a9093.205e48",
        "type": "debug",
        "z": "f5cdc70a.d1345",
        "name": "Log measure",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 932.5,
        "y": 267,
        "wires": []
    },
    {
        "id": "dde679be.bf36d",
        "type": "assert",
        "z": "f5cdc70a.d1345",
        "name": "Check measure object validity",
        "rules": [
            {
                "property": "payload",
                "propertyType": "msg",
                "type": "type",
                "value": "object"
            },
            {
                "property": "payload.measureType",
                "propertyType": "msg",
                "type": "nnull"
            },
            {
                "property": "payload.value",
                "propertyType": "msg",
                "type": "nnull"
            }
        ],
        "x": 586.5,
        "y": 268,
        "wires": [
            [
                "219a9093.205e48",
                "e06ed683.3682f8"
            ]
        ]
    },
    {
        "id": "b5530fd1.4a08b",
        "type": "comment",
        "z": "f5cdc70a.d1345",
        "name": "Check validity of the measure object",
        "info": "Each measure must match the following format:\n\n    {\n        measureType: \"temperature\",\n        value: 26.5\n    }",
        "x": 594.5,
        "y": 329,
        "wires": []
    },
    {
        "id": "3a786fb0.7c0ed",
        "type": "comment",
        "z": "f5cdc70a.d1345",
        "name": "Error output",
        "info": "",
        "x": 1413.5,
        "y": 371,
        "wires": []
    },
    {
        "id": "95028bc8.7cfca",
        "type": "catch",
        "z": "f5cdc70a.d1345",
        "name": "Catch invalid input",
        "scope": [
            "dde679be.bf36d",
            "dc679df4.785a9"
        ],
        "x": 952.5,
        "y": 356,
        "wires": [
            [
                "a461fffa.f50ae8"
            ]
        ]
    },
    {
        "id": "5f0ab50a.1ba7e4",
        "type": "link in",
        "z": "cf757416.97ca88",
        "name": "",
        "links": [
            "617e96cc.a19c5"
        ],
        "x": 887.5,
        "y": 556,
        "wires": [
            [
                "568149d7.fddb88"
            ]
        ]
    },
    {
        "id": "617e96cc.a19c5",
        "type": "link out",
        "z": "cf757416.97ca88",
        "name": "addMeasure error output",
        "links": [
            "5f0ab50a.1ba7e4"
        ],
        "x": 786.5,
        "y": 136,
        "wires": []
    },
    {
        "id": "c8e006ee.497f98",
        "type": "assert",
        "z": "f5cdc70a.d1345",
        "name": "Check API method",
        "rules": [
            {
                "property": "req.query.method",
                "propertyType": "msg",
                "type": "eq",
                "value": "addMeasure",
                "valueType": "str"
            }
        ],
        "x": 241.5,
        "y": 94,
        "wires": [
            [
                "dc679df4.785a9"
            ]
        ]
    },
    {
        "id": "8662de51.76b34",
        "type": "catch",
        "z": "f5cdc70a.d1345",
        "name": "Catch invalid method",
        "scope": [
            "c8e006ee.497f98"
        ],
        "x": 944.5,
        "y": 397,
        "wires": [
            [
                "838380de.374e6"
            ]
        ]
    },
    {
        "id": "a461fffa.f50ae8",
        "type": "template",
        "z": "f5cdc70a.d1345",
        "name": "Invalid input",
        "field": "error.message",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Invalid input: some required fields have been omitted.",
        "x": 1140,
        "y": 355,
        "wires": [
            []
        ]
    },
    {
        "id": "838380de.374e6",
        "type": "template",
        "z": "f5cdc70a.d1345",
        "name": "Invalid method",
        "field": "error.message",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "Unknown API method.",
        "x": 1151,
        "y": 399,
        "wires": [
            []
        ]
    },
    {
        "id": "b200420d.453858",
        "type": "assert",
        "z": "f5cdc70a.d1345",
        "name": "Ensure there is at least a measure",
        "rules": [
            {
                "property": "payload.data.length",
                "propertyType": "msg",
                "type": "gt",
                "value": "0",
                "valueType": "str"
            }
        ],
        "x": 238,
        "y": 211,
        "wires": [
            [
                "4b7f1965.9d2f48"
            ]
        ]
    },
    {
        "id": "513ced38.3182a4",
        "type": "catch",
        "z": "f5cdc70a.d1345",
        "name": "Catch no measure given",
        "scope": [
            "b200420d.453858"
        ],
        "x": 935,
        "y": 441,
        "wires": [
            [
                "1aabe407.0ce9ac"
            ]
        ]
    },
    {
        "id": "1aabe407.0ce9ac",
        "type": "template",
        "z": "f5cdc70a.d1345",
        "name": "No measure given",
        "field": "error.message",
        "fieldType": "msg",
        "format": "text",
        "syntax": "plain",
        "template": "No measure given for the target plantation.",
        "x": 1159.5,
        "y": 441,
        "wires": [
            []
        ]
    }
]